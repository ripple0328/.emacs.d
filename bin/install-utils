#!/usr/bin/env bash

colors () {
    # Reset
    RESET='\e[0m'
    RED='\e[0;31m'          # Red
    GREEN='\e[0;32m'        # Green
    YELLOW='\e[0;33m'       # Yellow
    BLUE='\e[0;34m'         # Blue
    PURPLE='\e[0;35m'       # Purple
    CYAN='\e[0;36m'         # Cyan
    WHITE='\e[0;37m'        # White

    # Bold
    BRED='\e[1;31m'         # Red
    BGREEN='\e[1;32m'       # Green
    BYELLOW='\e[1;33m'      # Yellow
    BBLUE='\e[1;34m'        # Blue
    BPURPLE='\e[1;35m'      # Purple
    BCYAN='\e[1;36m'        # Cyan
    BWHITE='\e[1;37m'       # White
}

colors
function msg {
    printf "$BGREEN 0000===--->$RESET $2 $1 $RESET\n"
}

BIN_PATH=/usr/local/bin

function checking-command-exists {
    msg 'checking whether command '$1' exist' $BCYAN
    # command -v $1 >/dev/null 2>&1
    hash $1 2>&-
}

function check-and-brew-install {
    msg 'checking whether '$1' has been installed' $BCYAN
    brew info $1  > /dev/null 2>&- &&
    
    msg $1' already been installed' $BYELLOW ||
    ( msg $1' not installed' $BRED
    msg 'brew installing '$1 $BPURPLE
    brew install $1 $2
    msg 'linking '$1' to system path' $BPURPLE
    brew link $1 --force)
}

function gem-install {
    msg 'checking whether gem '$1' is installed' $BCYAN
    gem which $1  > /dev/null 2>&- && 
    msg 'gem '$1' already been installed' $BYELLOW ||
    ( msg 'not been installed' $BRED
    msg 'now installing gem '$1' for you' $BPURPLE
    gem install $1)
}

function cleanup-command {
    msg 'looking for command '$1 $BCYAN
    which $1 | xargs sudo rm -rf
}

function install-brew {
    msg 'installing brew if you do not' $BPURPLE
    checking-command-exists brew &&
    msg 'brew has been installed' $BYELLOW ||
    ruby -e '$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)'
    msg 'updating homebrew' $BPURPLE
    brew update
}

function check-and-install-git {
    check-and-brew-install git
}
function clean-env {
    msg 'clean up environment' $BPURPLE
    msg 'remove system shipped emacs' $BPURPLE
    cleanup-command emacs
    cleanup-command emacsclient
    cleanup-command e
}


function install-emacs {
    msg 'installing emacs' $BPURPLE
    brew tap | grep phinze  >/dev/null 2>&1 &&
    msg 'phinze already been tapped' $BYELLOW ||
    brew tap phinze/homebrew-cask
    
    check-and-brew-install brew-cask
    brew cask list | grep emacs  >/dev/null 2>&1 &&
    msg 'emacs already been brew cask installed' $BYELLOW ||
    (msg "emacs not install by cask" $BRED
    brew cask alfred link
    sudo rm -rf /Applications/Emacs.app ~/Applications/Emacs.app
    brew cask install emacs)
    msg 'linking emacs to system path' $BPURPLE
}

function create-command-line-emacs {
    msg 'creating emacs command' $BPURPLE
    sudo rm -f /usr/bin/emacs
    sudo rm -f $BIN_PATH/emacs
    cp emacs-script $BIN_PATH/emacs
    chmod a+x $BIN_PATH/emacs

    msg 'linking commands shipped with emacs to system path' $BPURPLE
    ln -sf $(cask-packages-path emacs)/Emacs.app/Contents/MacOS/bin/* $BIN_PATH/
}

function daemon-emacs() {
    msg 'daemon emacs to launch at login' $BPURPLE
    git clone https://github.com/ripple0328/emacs-daemon-osx.git
    cd emacs-daemon-osx
    make
    cp org.gnu.emacs.plist ~/Library/LaunchAgents
    launchctl load ~/Library/LaunchAgents/org.gnu.emacs.plist
    sudo rm -rf /Applications/emacs-client.app
    sudo mv  emacs-client.app /Applications/
    sudo mv e $BIN_PATH/
    sudo chmod a+x $BIN_PATH/e
    cd ..
    rm -rf emacs-daemon-osx
}

function patch-shebang-path() {
    sed -ibak '1 c\
#\!/usr/bin/env '$2'\
'  $1
rm $1.bak    
}

function cask-packages-path(){
    brew cask info $1 | sed -n 3p | awk '{split($0,a," "); print a[1]}'
}

function emacs-path() {
    cask-packages-path emacs | awk '{print $1"/Emacs.app/Contents/MacOS/Emacs"}'
}

